import { Container, Graphics, Text, TextStyle } from "pixi.js";

export interface Mission {
  id: string;
  title: string;
  description: string;
  targetType: string; // 'small', 'medium', 'large', 'golden', 'boss', 'any'
  targetCount: number;
  currentCount: number;
  reward: {
    coins: number;
    ammo: number; // Th∆∞·ªüng ƒë·∫°n thay v√¨ experience
  };
  completed: boolean;
  level: number;
}

export class MissionSystem extends Container {
  private missions: Mission[] = [];
  private currentMissionIndex: number = 0;
  private missionUI: Container | null = null;

  constructor() {
    super();
    this.initializeMissions();
    this.setupMissionUI();
  }

  private setupMissionUI(): void {
    this.missionUI = new Container();
    this.addChild(this.missionUI);

    // V·ªã tr√≠ UI nhi·ªám v·ª•
    this.missionUI.x = 20;
    this.missionUI.y = 20;

    this.updateMissionDisplay();
  }

  private updateMissionDisplay(): void {
    if (!this.missionUI) return;

    this.missionUI.removeChildren();

    const currentMission = this.getCurrentMission();
    if (!currentMission) {
      // Hi·ªÉn th·ªã th√¥ng b√°o ho√†n th√†nh t·∫•t c·∫£ nhi·ªám v·ª•
      const completedText = new Text(
        "üéâ Ho√†n th√†nh t·∫•t c·∫£ nhi·ªám v·ª•! üéâ",
        new TextStyle({
          fontFamily: "Arial",
          fontSize: 16,
          fill: 0x00ff00,
          fontWeight: "bold",
          stroke: { color: 0x000000, width: 2 },
        }),
      );
      this.missionUI.addChild(completedText);
      return;
    }

    // Background cho nhi·ªám v·ª•
    const background = new Graphics();
    background.rect(0, 0, 400, 120);
    background.fill({ color: 0x000000, alpha: 0.7 });
    background.stroke({ color: 0xffffff, width: 2 });
    this.missionUI.addChild(background);

    // Ti√™u ƒë·ªÅ nhi·ªám v·ª•
    const titleText = new Text(
      currentMission.title,
      new TextStyle({
        fontFamily: "Arial",
        fontSize: 14,
        fill: 0xffff00,
        fontWeight: "bold",
        stroke: { color: 0x000000, width: 2 },
      }),
    );
    titleText.x = 10;
    titleText.y = 10;
    this.missionUI.addChild(titleText);

    // M√¥ t·∫£ nhi·ªám v·ª•
    const descText = new Text(
      currentMission.description,
      new TextStyle({
        fontFamily: "Arial",
        fontSize: 12,
        fill: 0xffffff,
        stroke: { color: 0x000000, width: 1 },
      }),
    );
    descText.x = 10;
    descText.y = 35;
    this.missionUI.addChild(descText);

    // Thanh ti·∫øn ƒë·ªô
    const progressText = new Text(
      `${currentMission.currentCount}/${currentMission.targetCount}`,
      new TextStyle({
        fontFamily: "Arial",
        fontSize: 12,
        fill: 0x00ff00,
        fontWeight: "bold",
        stroke: { color: 0x000000, width: 1 },
      }),
    );
    progressText.x = 10;
    progressText.y = 60;
    this.missionUI.addChild(progressText);

    // Thanh ti·∫øn ƒë·ªô visual
    const progressBarBg = new Graphics();
    progressBarBg.rect(10, 80, 200, 15);
    progressBarBg.fill({ color: 0x333333, alpha: 0.8 });
    progressBarBg.stroke({ color: 0xffffff, width: 1 });
    this.missionUI.addChild(progressBarBg);

    const progressPercentage =
      currentMission.currentCount / currentMission.targetCount;
    const progressBar = new Graphics();
    progressBar.rect(10, 80, 200 * progressPercentage, 15);
    progressBar.fill({ color: 0x00ff00, alpha: 0.8 });
    this.missionUI.addChild(progressBar);

    // Ph·∫ßn th∆∞·ªüng
    const rewardText = new Text(
      `Ph·∫ßn th∆∞·ªüng: ${currentMission.reward.coins} xu, ${currentMission.reward.ammo} ƒë·∫°n`,
      new TextStyle({
        fontFamily: "Arial",
        fontSize: 10,
        fill: 0xffaa00,
        stroke: { color: 0x000000, width: 1 },
      }),
    );
    rewardText.x = 10;
    rewardText.y = 100;
    this.missionUI.addChild(rewardText);
  }

  private initializeMissions(): void {
    // Danh s√°ch nhi·ªám v·ª• theo c·∫•p ƒë·ªô - h·ªó tr·ª£ c·∫£ c√° v√† qu·∫£ng c√°o
    this.missions = [
      // C·∫•p 1
      {
        id: "mission_1_1",
        title: "Ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu",
        description: "Ti√™u di·ªát 5 con c√° nh·ªè",
        targetType: "small",
        targetCount: 5,
        currentCount: 0,
        reward: { coins: 50, ammo: 100 },
        completed: false,
        level: 1,
      },
      {
        id: "mission_1_2",
        title: "Th·ª£ sƒÉn c√°",
        description: "Ti√™u di·ªát 10 ƒë·ªëi t∆∞·ª£ng b·∫•t k·ª≥",
        targetType: "any",
        targetCount: 10,
        currentCount: 0,
        reward: { coins: 100, ammo: 200 },
        completed: false,
        level: 1,
      },
      {
        id: "mission_1_3",
        title: "Ph√° qu·∫£ng c√°o",
        description: "Ti√™u di·ªát 5 banner qu·∫£ng c√°o",
        targetType: "banner",
        targetCount: 5,
        currentCount: 0,
        reward: { coins: 80, ammo: 150 },
        completed: false,
        level: 1,
      },

      // C·∫•p 2
      {
        id: "mission_2_1",
        title: "SƒÉn c√° trung b√¨nh",
        description: "Ti√™u di·ªát 8 con c√° trung b√¨nh",
        targetType: "medium",
        targetCount: 8,
        currentCount: 0,
        reward: { coins: 150, ammo: 300 },
        completed: false,
        level: 2,
      },
      {
        id: "mission_2_2",
        title: "Th·ª£ sƒÉn v√†ng",
        description: "Ti√™u di·ªát 3 con c√° v√†ng",
        targetType: "golden",
        targetCount: 3,
        currentCount: 0,
        reward: { coins: 200, ammo: 500 },
        completed: false,
        level: 2,
      },
      {
        id: "mission_2_3",
        title: "Ch·∫∑n popup",
        description: "Ti√™u di·ªát 6 popup qu·∫£ng c√°o",
        targetType: "popup",
        targetCount: 6,
        currentCount: 0,
        reward: { coins: 180, ammo: 350 },
        completed: false,
        level: 2,
      },

      // C·∫•p 3
      {
        id: "mission_3_1",
        title: "SƒÉn c√° l·ªõn",
        description: "Ti√™u di·ªát 5 con c√° l·ªõn",
        targetType: "large",
        targetCount: 5,
        currentCount: 0,
        reward: { coins: 300, ammo: 600 },
        completed: false,
        level: 3,
      },
      {
        id: "mission_3_2",
        title: "Th·ª£ sƒÉn chuy√™n nghi·ªáp",
        description: "Ti√™u di·ªát 15 ƒë·ªëi t∆∞·ª£ng b·∫•t k·ª≥",
        targetType: "any",
        targetCount: 15,
        currentCount: 0,
        reward: { coins: 400, ammo: 800 },
        completed: false,
        level: 3,
      },
      {
        id: "mission_3_3",
        title: "Ph√° video qu·∫£ng c√°o",
        description: "Ti√™u di·ªát 4 video qu·∫£ng c√°o",
        targetType: "video",
        targetCount: 4,
        currentCount: 0,
        reward: { coins: 350, ammo: 700 },
        completed: false,
        level: 3,
      },

      // C·∫•p 4
      {
        id: "mission_4_1",
        title: "SƒÉn boss",
        description: "Ti√™u di·ªát 2 con c√° boss",
        targetType: "boss",
        targetCount: 2,
        currentCount: 0,
        reward: { coins: 600, ammo: 1200 },
        completed: false,
        level: 4,
      },
      {
        id: "mission_4_2",
        title: "Chi·∫øn ƒë·∫•u v·ªõi Ph·∫°m Kh·∫£ Di",
        description: "Ti√™u di·ªát 1 con boss Ph·∫°m Kh·∫£ Di",
        targetType: "pham_kha_di",
        targetCount: 1,
        currentCount: 0,
        reward: { coins: 800, ammo: 1500 },
        completed: false,
        level: 4,
      },
      {
        id: "mission_4_3",
        title: "Th·ª£ sƒÉn chuy√™n nghi·ªáp",
        description: "Ti√™u di·ªát 20 ƒë·ªëi t∆∞·ª£ng b·∫•t k·ª≥",
        targetType: "any",
        targetCount: 20,
        currentCount: 0,
        reward: { coins: 500, ammo: 1000 },
        completed: false,
        level: 4,
      },

      // C·∫•p 5
      {
        id: "mission_5_1",
        title: "ƒê·ªëi ƒë·∫ßu Tr·∫ßn VƒÉn Nghƒ©a",
        description: "Ti√™u di·ªát 1 con boss Tr·∫ßn VƒÉn Nghƒ©a",
        targetType: "tran_van_nghia",
        targetCount: 1,
        currentCount: 0,
        reward: { coins: 1200, ammo: 2000 },
        completed: false,
        level: 5,
      },
      {
        id: "mission_5_2",
        title: "Th·ª£ sƒÉn boss",
        description: "Ti√™u di·ªát 3 con boss b·∫•t k·ª≥",
        targetType: "boss",
        targetCount: 3,
        currentCount: 0,
        reward: { coins: 1000, ammo: 1800 },
        completed: false,
        level: 5,
      },
      {
        id: "mission_5_3",
        title: "Ph√° qu·∫£ng c√°o cao c·∫•p",
        description: "Ti√™u di·ªát 8 qu·∫£ng c√°o d·ªãch v·ª•",
        targetType: "any",
        targetCount: 8,
        currentCount: 0,
        reward: { coins: 600, ammo: 1200 },
        completed: false,
        level: 5,
      },

      // C·∫•p 6 - Boss cu·ªëi c√πng
      {
        id: "mission_6_1",
        title: "Th·ª≠ th√°ch cu·ªëi c√πng",
        description: "Ti√™u di·ªát boss Nghƒ©a_M·∫≠p",
        targetType: "nghia_map",
        targetCount: 1,
        currentCount: 0,
        reward: { coins: 2000, ammo: 3000 },
        completed: false,
        level: 6,
      },
      {
        id: "mission_6_2",
        title: "B·∫≠c th·∫ßy sƒÉn boss",
        description: "Ti√™u di·ªát 5 con boss b·∫•t k·ª≥",
        targetType: "boss",
        targetCount: 5,
        currentCount: 0,
        reward: { coins: 1500, ammo: 2500 },
        completed: false,
        level: 6,
      },
      {
        id: "mission_6_3",
        title: "Th·ª£ sƒÉn t·ªëi th∆∞·ª£ng",
        description: "Ti√™u di·ªát 30 ƒë·ªëi t∆∞·ª£ng b·∫•t k·ª≥",
        targetType: "any",
        targetCount: 30,
        currentCount: 0,
        reward: { coins: 1000, ammo: 2000 },
        completed: false,
        level: 6,
      },
    ];
  }

  public updateMissionProgress(targetType: string): boolean {
    const currentMission = this.getCurrentMission();
    if (!currentMission) return false;

    // Ki·ªÉm tra xem targetType c√≥ kh·ªõp v·ªõi nhi·ªám v·ª• kh√¥ng
    if (
      currentMission.targetType === "any" ||
      currentMission.targetType === targetType
    ) {
      currentMission.currentCount++;

      // Ki·ªÉm tra xem nhi·ªám v·ª• ƒë√£ ho√†n th√†nh ch∆∞a
      if (currentMission.currentCount >= currentMission.targetCount) {
        currentMission.completed = true;
        this.currentMissionIndex++;

        // C·∫≠p nh·∫≠t UI
        this.updateMissionDisplay();

        return true; // Nhi·ªám v·ª• ho√†n th√†nh
      }
    }

    // C·∫≠p nh·∫≠t UI
    this.updateMissionDisplay();
    return false; // Nhi·ªám v·ª• ch∆∞a ho√†n th√†nh
  }

  public getCurrentMission(): Mission | null {
    if (this.currentMissionIndex < this.missions.length) {
      return this.missions[this.currentMissionIndex];
    }
    return null;
  }

  public getMissionReward(): { coins: number; ammo: number } | null {
    const currentMission = this.getCurrentMission();
    if (currentMission && currentMission.completed) {
      return currentMission.reward;
    }
    return null;
  }

  public hasActiveMission(): boolean {
    return this.currentMissionIndex < this.missions.length;
  }

  public getMissionProgress(): { current: number; total: number } {
    const currentMission = this.getCurrentMission();
    if (currentMission) {
      return {
        current: currentMission.currentCount,
        total: currentMission.targetCount,
      };
    }
    return { current: 0, total: 0 };
  }
}
